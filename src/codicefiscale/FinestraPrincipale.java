/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package codicefiscale;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import javax.imageio.*;
import javax.swing.JOptionPane;
/**
 *
 * @author alex
 */
public class FinestraPrincipale extends javax.swing.JFrame {

    /**
     * Creates new form FinestraPrincipale
     */
    public FinestraPrincipale() {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        anno.setSelectedIndex(anno.getItemCount()/2);
        BufferedImage image = null;
        try {
            image = ImageIO.read(
                this.getClass().getResource("1UP.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        this.setIconImage(image);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        info = new javax.swing.JLabel();
        nomelabel = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        cognomelabel = new javax.swing.JLabel();
        cognome = new javax.swing.JTextField();
        datalabel = new javax.swing.JLabel();
        giorno = new javax.swing.JComboBox();
        mese = new javax.swing.JComboBox();
        anno = new javax.swing.JComboBox();
        sessolabel = new javax.swing.JLabel();
        uomo = new javax.swing.JRadioButton();
        donna = new javax.swing.JRadioButton();
        nascitalabel = new javax.swing.JLabel();
        comune = new javax.swing.JTextField();
        genera = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Genera il tuo Codice Fiscale");

        info.setFont(new java.awt.Font("New Century Schoolbook", 0, 13)); // NOI18N
        info.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        info.setText("Inserisci i tuoi dati e dopo clicca sul bottone per sapere qual Ã¨ il tuo Codice Fiscale.");
        info.setToolTipText("");
        info.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        info.setName(""); // NOI18N

        nomelabel.setFont(new java.awt.Font("New Century Schoolbook", 0, 12)); // NOI18N
        nomelabel.setText("Nome: ");
        nomelabel.setToolTipText("");

        nome.setFont(new java.awt.Font("New Century Schoolbook", 2, 12)); // NOI18N
        nome.setForeground(new java.awt.Color(102, 102, 102));
        nome.setText("Inserisci qui il tuo Nome.");
        nome.setToolTipText("");
        nome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nomeFocusLost(evt);
            }
        });

        cognomelabel.setFont(new java.awt.Font("New Century Schoolbook", 0, 12)); // NOI18N
        cognomelabel.setText("Cognome:");
        cognomelabel.setToolTipText("");

        cognome.setFont(new java.awt.Font("New Century Schoolbook", 2, 12)); // NOI18N
        cognome.setForeground(new java.awt.Color(102, 102, 102));
        cognome.setText("Inserisci qui il tuo Cognome.");
        cognome.setToolTipText("");
        cognome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cognomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cognomeFocusLost(evt);
            }
        });

        datalabel.setFont(new java.awt.Font("New Century Schoolbook", 0, 12)); // NOI18N
        datalabel.setText("Data di Nascita:");
        datalabel.setToolTipText("");

        giorno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        giorno.setToolTipText("Giorno");

        mese.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre" }));
        mese.setToolTipText("Mese");

        anno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013" }));
        anno.setToolTipText("Anno");

        sessolabel.setFont(new java.awt.Font("New Century Schoolbook", 0, 12)); // NOI18N
        sessolabel.setText("Sesso:");
        sessolabel.setToolTipText("");

        uomo.setFont(new java.awt.Font("New Century Schoolbook", 0, 12)); // NOI18N
        uomo.setSelected(true);
        uomo.setText("Uomo");
        uomo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uomoMouseClicked(evt);
            }
        });

        donna.setFont(new java.awt.Font("New Century Schoolbook", 0, 12)); // NOI18N
        donna.setText("Donna");
        donna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                donnaMouseClicked(evt);
            }
        });

        nascitalabel.setFont(new java.awt.Font("New Century Schoolbook", 0, 12)); // NOI18N
        nascitalabel.setText("Luogo di nascita: ");
        nascitalabel.setToolTipText("");

        comune.setFont(new java.awt.Font("New Century Schoolbook", 2, 12)); // NOI18N
        comune.setForeground(new java.awt.Color(102, 102, 102));
        comune.setText("Inserisci qui il tuo Luogo di nascita.");
        comune.setToolTipText("");
        comune.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comuneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                comuneFocusLost(evt);
            }
        });

        genera.setFont(new java.awt.Font("New Century Schoolbook", 0, 12)); // NOI18N
        genera.setText("Genera Codice Fiscale");
        genera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nomelabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cognomelabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cognome))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(nascitalabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comune))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(datalabel)
                                .addGap(18, 18, 18)
                                .addComponent(giorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mese, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(anno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sessolabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(uomo)
                                .addGap(10, 10, 10)
                                .addComponent(donna))
                            .addComponent(genera, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomelabel)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cognomelabel)
                    .addComponent(cognome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datalabel)
                    .addComponent(giorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mese, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessolabel)
                    .addComponent(uomo)
                    .addComponent(donna))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nascitalabel)
                    .addComponent(comune, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genera))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generaActionPerformed
        if(!(nome.getText().equals("Inserisci qui il tuo Nome.") ||
             cognome.getText().equals("Inserisci qui il tuo Cognome.") ||
             comune.getText().equals("Inserisci qui il tuo Luogo di nascita."))){
                    String s = GeneraCodice();
                    if(!comune.getText().equals("Errore: il comune inserito non esiste!")){
                        Risultato fr = new Risultato(s);
                    }
        }
    }//GEN-LAST:event_generaActionPerformed

    private void uomoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uomoMouseClicked
        if(donna.isSelected()) donna.setSelected(false);
        else uomo.setSelected(true);
    }//GEN-LAST:event_uomoMouseClicked

    private void donnaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_donnaMouseClicked
        if(uomo.isSelected()) uomo.setSelected(false);
        else donna.setSelected(true);
    }//GEN-LAST:event_donnaMouseClicked

    private void nomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeFocusGained
        if(nome.getText().equals("Inserisci qui il tuo Nome.")){
            nome.setText("");
            nome.setForeground(Color.black);
            nome.setFont(new java.awt.Font("New Century Schoolbook", 0, 12));
        }
    }//GEN-LAST:event_nomeFocusGained

    private void nomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeFocusLost
        if(nome.getText().equals("")){
            nome.setFont(new java.awt.Font("New Century Schoolbook", 2, 12)); // NOI18N
            nome.setForeground(new java.awt.Color(102, 102, 102));
            nome.setText("Inserisci qui il tuo Nome.");
        }
    }//GEN-LAST:event_nomeFocusLost

    private void cognomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cognomeFocusGained
        if(cognome.getText().equals("Inserisci qui il tuo Cognome.")){
            cognome.setText("");
            cognome.setForeground(Color.black);
            cognome.setFont(new java.awt.Font("New Century Schoolbook", 0, 12));
        }
    }//GEN-LAST:event_cognomeFocusGained

    private void cognomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cognomeFocusLost
        if(cognome.getText().equals("")){
            cognome.setFont(new java.awt.Font("New Century Schoolbook", 2, 12)); // NOI18N
            cognome.setForeground(new java.awt.Color(102, 102, 102));
            cognome.setText("Inserisci qui il tuo Cognome.");
        }
    }//GEN-LAST:event_cognomeFocusLost

    private void comuneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comuneFocusGained
        if(comune.getText().equals("Inserisci qui il tuo Luogo di nascita.")){
            comune.setText("");
            comune.setForeground(Color.black);
            comune.setFont(new java.awt.Font("New Century Schoolbook", 0, 12));
        }
        if(comune.getText().equals("Errore: il comune inserito non esiste!")){
           comune.setText(""); 
           comune.setForeground(Color.black);
        }
    }//GEN-LAST:event_comuneFocusGained

    private void comuneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comuneFocusLost
        if(comune.getText().equals("")){
            comune.setFont(new java.awt.Font("New Century Schoolbook", 2, 12)); // NOI18N
            comune.setForeground(new java.awt.Color(102, 102, 102));
            comune.setText("Inserisci qui il tuo Luogo di nascita.");
        }
    }//GEN-LAST:event_comuneFocusLost

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinestraPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinestraPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinestraPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinestraPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FinestraPrincipale().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox anno;
    private javax.swing.JTextField cognome;
    private javax.swing.JLabel cognomelabel;
    private javax.swing.JTextField comune;
    private javax.swing.JLabel datalabel;
    private javax.swing.JRadioButton donna;
    private javax.swing.JButton genera;
    private javax.swing.JComboBox giorno;
    private javax.swing.JLabel info;
    private javax.swing.JComboBox mese;
    private javax.swing.JLabel nascitalabel;
    private javax.swing.JTextField nome;
    private javax.swing.JLabel nomelabel;
    private javax.swing.JLabel sessolabel;
    private javax.swing.JRadioButton uomo;
    // End of variables declaration//GEN-END:variables


/**** METODI UTILI ****/
    
    public String GeneraCodice(){
        String codicefiscale = "";
        String controllo = "";
        codicefiscale += LettereCognome();
        codicefiscale += LettereNome();
        codicefiscale += AnnoDiNascita();
        codicefiscale += MeseDiNascita();
        codicefiscale += GiornoESesso();
        controllo += ComuneNascita();
        if(controllo.equals("ERRORE!")){
            comune.setForeground(Color.red);
            comune.setText("Errore: il comune inserito non esiste!");
        }
        codicefiscale += controllo;
        codicefiscale += CarattereDiControllo(codicefiscale);
        return codicefiscale.toUpperCase();
    }
    
    public String LettereCognome(){
        String cognome = this.cognome.getText();
        String risultato = "";
        int cont = 0;
        switch(cognome.length()){
            //case 0: ERRORE!!!
            case 1: return (cognome + "XX"); 
            case 2: return (cognome + "X");
            case 3: return cognome;
            default: for(int i = 0; i < cognome.length() && cont < 3; i++){
                            if(!Ã¨Vocale(cognome.charAt(i)) && cognome.charAt(i) != ' ' && cognome.charAt(i) != '\''){
                                risultato += cognome.charAt(i);
                                cont++;
                            }
                    }
                    if(cont < 3){
                        for(int i = 0; i < cognome.length() && cont < 3; i++){
                            if(Ã¨Vocale(cognome.charAt(i)) && cognome.charAt(i) != ' ' && cognome.charAt(i) != '\''){
                                risultato += cognome.charAt(i);
                                cont++;
                            }
                        }
                    }
                    return risultato;
        }
        
    }
    
    public String LettereNome(){
        String nome = this.nome.getText();
        String risultato = "";
        int cont = 0;
        if(MenoDiTreConsonanti(nome)){
            switch(nome.length()){
                //case 0: ERRORE!!!
                case 1: return (nome + "XX"); 
                case 2: return (nome + "X");
                case 3: return nome;
                default: for(int i = 0; i < nome.length() && cont < 3; i++){
                            if(!Ã¨Vocale(nome.charAt(i)) && nome.charAt(i) != ' '){
                                risultato += nome.charAt(i);
                                cont++;
                            }
                    }
                    if(cont < 3){
                        for(int i = 0; i < nome.length() && cont < 3; i++){
                            if(Ã¨Vocale(nome.charAt(i))  && nome.charAt(i) != ' '){
                                risultato += nome.charAt(i);
                                cont++;
                            }
                        }
                    }
                    return risultato;
                }
        
        }
        else{
            for(int i = 0; i < nome.length() && cont < 4; i++){
                            if(!Ã¨Vocale(nome.charAt(i)) && nome.charAt(i) != ' '){
                                if(cont != 1){
                                    risultato += nome.charAt(i);
                                    cont++;
                                }
                                else{
                                    cont++;
                                }
                            }
                    }
            return risultato;
        }
    }
    
    public boolean Ã¨Vocale(char c){
        if(c == 'A' || c == 'a' || 
           c == 'E' || c == 'e' || 
           c == 'I' || c == 'i' || 
           c == 'O' || c == 'o' || 
           c == 'U' || c == 'u' ){
            return true;
        }
        return false;
    }
   
    public boolean MenoDiTreConsonanti(String n){
        int cont = 0;
        for(int i = 0; i < n.length(); i++){
            if(!Ã¨Vocale(n.charAt(i))){
                cont++;
                if(cont >= 3){
                    return false;
                }
            }
        }
        return true;
    }
    
    public String AnnoDiNascita(){
    String risultato = "";
    String anno =(String)this.anno.getSelectedItem(); 
    risultato += anno.charAt(anno.length()-2); // su questo non sono convinto xD Ã¨ cosi per gli array, ma per le stringhe?
    risultato += anno.charAt(anno.length()-1);
    return risultato;
    
            
    }
    
    public String MeseDiNascita(){
    String mese = (String)this.mese.getSelectedItem();
    if(mese.equals("Gennaio")) return "A";
    if(mese.equals("Febbraio")) return "B";
    if(mese.equals("Marzo")) return "C";
    if(mese.equals("Aprile")) return "D";
    if(mese.equals("Maggio")) return "E";
    if(mese.equals("Giugno")) return "H";
    if(mese.equals("Luglio")) return "L";
    if(mese.equals("Agosto")) return "M";
    if(mese.equals("Settembre")) return "P";
    if(mese.equals("Ottobre")) return "R";
    if(mese.equals("Novembre")) return "S";
    if(mese.equals("Dicembre")) return "T";
    return "ERRORE!";
    }
    
    public String GiornoESesso(){
    String giorno = (String)this.giorno.getSelectedItem();
    if(this.uomo.isSelected()) return giorno;
    if(giorno.length() == 1) return ("4" + giorno.charAt(0));
    if(giorno.charAt(0) == '1') return ("5" + giorno.charAt(1));
    if(giorno.charAt(0) == '2') return ("6" + giorno.charAt(1));
    if(giorno.charAt(0) == '3') return ("7" + giorno.charAt(1));
    return "Errore";
    }
   
    public String ComuneNascita(){
        String comune = this.comune.getText();
        String linea;
        try{
            BufferedReader inStream = new BufferedReader(new InputStreamReader(new FileInputStream("Comuni.txt")));
            while(inStream.hashCode() != -1){
                linea = inStream.readLine();
                String [] s = linea.split(";");
                if(comune.equalsIgnoreCase(s[0])) return s[1];
                }
            return "ERRORE!";
        }
        catch(Exception e){
            return "ERRORE!";
        }
    }
    
    public String CarattereDiControllo(String risultato){
        String risultatopari = "";
        String risultatodispari = "";
        int valore;
        for(int i = 0; i < risultato.length(); i++){ // oppure i < risultato.lenght()-1 ?
            if((i+1)%2 == 0){
                risultatopari += risultato.charAt(i);
            }
            else{
                risultatodispari += risultato.charAt(i);
            }
        }
        valore = ValorePari(risultatopari.toUpperCase()) + ValoreDispari(risultatodispari.toUpperCase());
        switch(valore%26){
            case 0: return "A";
            case 1: return "B";
            case 2: return "C";
            case 3: return "D";
            case 4: return "E";
            case 5: return "F";
            case 6: return "G";
            case 7: return "H";
            case 8: return "I";
            case 9: return "J";
            case 10: return "K";
            case 11: return "L";
            case 12: return "M";
            case 13: return "N";
            case 14: return "O";
            case 15: return "P";
            case 16: return "Q";
            case 17: return "R";
            case 18: return "S";
            case 19: return "T";
            case 20: return "U";
            case 21: return "V";
            case 22: return "W";
            case 23: return "X";
            case 24: return "Y";
            case 25: return "Z";
        }
        return "ERRORE!";    
    }
    
    public int ValorePari(String s){
        int val = 0;
        for(int i = 0; i < s.length(); i++){ // oppure i < risultato.lenght()-1 ?
            if(s.charAt(i) == '0') val += 0;
            else if(s.charAt(i) == '1') val += 1;
            else if(s.charAt(i) == '2') val += 2;
            else if(s.charAt(i) == '3') val += 3;
            else if(s.charAt(i) == '4') val += 4;
            else if(s.charAt(i) == '5') val += 5;
            else if(s.charAt(i) == '6') val += 6;
            else if(s.charAt(i) == '7') val += 7;
            else if(s.charAt(i) == '8') val += 8;
            else if(s.charAt(i) == '9') val += 9;
            else if(s.charAt(i) == 'A') val += 0;
            else if(s.charAt(i) == 'B') val += 1;
            else if(s.charAt(i) == 'C') val += 2;
            else if(s.charAt(i) == 'D') val += 3;
            else if(s.charAt(i) == 'E') val += 4;
            else if(s.charAt(i) == 'F') val += 5;
            else if(s.charAt(i) == 'G') val += 6;
            else if(s.charAt(i) == 'H') val += 7;
            else if(s.charAt(i) == 'I') val += 8;
            else if(s.charAt(i) == 'J') val += 9;
            else if(s.charAt(i) == 'K') val += 10;
            else if(s.charAt(i) == 'L') val += 11;
            else if(s.charAt(i) == 'M') val += 12;
            else if(s.charAt(i) == 'N') val += 13;
            else if(s.charAt(i) == 'O') val += 14;
            else if(s.charAt(i) == 'P') val += 15;
            else if(s.charAt(i) == 'Q') val += 16;
            else if(s.charAt(i) == 'R') val += 17;
            else if(s.charAt(i) == 'S') val += 18;
            else if(s.charAt(i) == 'T') val += 19;
            else if(s.charAt(i) == 'U') val += 20;
            else if(s.charAt(i) == 'V') val += 21;
            else if(s.charAt(i) == 'W') val += 22;
            else if(s.charAt(i) == 'X') val += 23;
            else if(s.charAt(i) == 'Y') val += 24;
            else if(s.charAt(i) == 'Z') val += 25;
        }
        return val;
    }
    
    public int ValoreDispari(String s){
        int val = 0;
        for(int i = 0; i < s.length(); i++){ // oppure i < risultato.lenght()-1 ?
            if(s.charAt(i) == '0') val += 1;
            else if(s.charAt(i) == '1') val += 0;
            else if(s.charAt(i) == '2') val += 5;
            else if(s.charAt(i) == '3') val += 7;
            else if(s.charAt(i) == '4') val += 9;
            else if(s.charAt(i) == '5') val += 13;
            else if(s.charAt(i) == '6') val += 15;
            else if(s.charAt(i) == '7') val += 17;
            else if(s.charAt(i) == '8') val += 19;
            else if(s.charAt(i) == '9') val += 21;
            else if(s.charAt(i) == 'A') val += 1;
            else if(s.charAt(i) == 'B') val += 0;
            else if(s.charAt(i) == 'C') val += 5;
            else if(s.charAt(i) == 'D') val += 7;
            else if(s.charAt(i) == 'E') val += 9;
            else if(s.charAt(i) == 'F') val += 13;
            else if(s.charAt(i) == 'G') val += 15;
            else if(s.charAt(i) == 'H') val += 17;
            else if(s.charAt(i) == 'I') val += 19;
            else if(s.charAt(i) == 'J') val += 21;
            else if(s.charAt(i) == 'K') val += 2;
            else if(s.charAt(i) == 'L') val += 4;
            else if(s.charAt(i) == 'M') val += 18;
            else if(s.charAt(i) == 'N') val += 20;
            else if(s.charAt(i) == 'O') val += 11;
            else if(s.charAt(i) == 'P') val += 3;
            else if(s.charAt(i) == 'Q') val += 6;
            else if(s.charAt(i) == 'R') val += 8;
            else if(s.charAt(i) == 'S') val += 12;
            else if(s.charAt(i) == 'T') val += 14;
            else if(s.charAt(i) == 'U') val += 16;
            else if(s.charAt(i) == 'V') val += 10;
            else if(s.charAt(i) == 'W') val += 22;
            else if(s.charAt(i) == 'X') val += 25;
            else if(s.charAt(i) == 'Y') val += 24;
            else if(s.charAt(i) == 'Z') val += 23;
        }
        return val;
    }




}
